package org.opencompare.ui;

import java.util.Arrays;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import org.opencompare.ExploreApplication;
import org.opencompare.Snapshot;
import org.opencompare.WithProgress;
import org.opencompare.database.DatabaseManagerFactory;
import org.opencompare.explorable.ProcessConfiguration;

public class CompareSnapshotsDialog extends javax.swing.JDialog implements WithProgress {

    private static final String STATUS_PREFIX = "Comparing snapshots: ";
    
    private static final long serialVersionUID = 1L;
    private final MainWindow mainWindow;
	
    public CompareSnapshotsDialog(MainWindow parent, boolean modal) {
        super(parent, modal);
        
        this.mainWindow = parent;
        
        initComponents();
        
        refreshComboboxes(null, null);
        buttonAction.setText(TEXT_START);
    }

    private void refreshComboboxes(Snapshot referenceSelect, String actualSelect) {
    	Snapshot selectedSnapshot = DatabaseManagerFactory.get().getSnapshot(actualSelect);
    	
        Snapshot[] snapshots = DatabaseManagerFactory.get().listSnapshots();
        List<Snapshot> snapshotsList = Arrays.asList(snapshots);
        
        selectReferenceSnapshot.setModel(new DefaultComboBoxModel(snapshots));
        if (referenceSelect != null && snapshotsList.contains(referenceSelect)) {
            selectReferenceSnapshot.setSelectedItem(referenceSelect);
        }
        
        selectActualSnapshot.setModel(new DefaultComboBoxModel(snapshots));
        if (selectedSnapshot != null && snapshotsList.contains(selectedSnapshot)) {
            selectReferenceSnapshot.setSelectedItem(selectedSnapshot);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitle = new javax.swing.JLabel();
        labelImage = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        buttonAction = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        labelReferenceSnapshot = new javax.swing.JLabel();
        buttonNewReferenceSnapshot = new javax.swing.JButton();
        labelActualSnapshot = new javax.swing.JLabel();
        buttonNewActualSnapshot = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        editConflictSnapshot = new javax.swing.JTextField();
        selectReferenceSnapshot = new javax.swing.JComboBox();
        selectActualSnapshot = new javax.swing.JComboBox();
        labelCompareStatus = new javax.swing.JLabel();
        comparisonProgress = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compare snapshot");
        setAlwaysOnTop(true);
        setLocationByPlatform(true);
        setModal(true);

        labelTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labelTitle.setText("Compare shapshot");

        labelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/opencompare/ui/images/fingerprint.gif"))); // NOI18N
        labelImage.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        buttonAction.setText("Action!");
        buttonAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        labelReferenceSnapshot.setText("Reference snapshot");

        buttonNewReferenceSnapshot.setText("New...");
        buttonNewReferenceSnapshot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewReferenceSnapshotActionPerformed(evt);
            }
        });

        labelActualSnapshot.setText("Actual snapshot");

        buttonNewActualSnapshot.setText("New...");
        buttonNewActualSnapshot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewActualSnapshotActionPerformed(evt);
            }
        });

        jLabel1.setText("Conflict snapshot");

        selectReferenceSnapshot.setModel(new javax.swing.DefaultComboBoxModel(new Snapshot[] { }));

        selectActualSnapshot.setModel(new javax.swing.DefaultComboBoxModel(new Snapshot[] { }));

        labelCompareStatus.setText("Comparing objects");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(labelImage)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(labelTitle, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(editConflictSnapshot)
                                    .add(selectActualSnapshot, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(comparisonProgress, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(layout.createSequentialGroup()
                                        .add(labelCompareStatus)
                                        .add(0, 210, Short.MAX_VALUE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(buttonNewActualSnapshot))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(selectReferenceSnapshot, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(buttonNewReferenceSnapshot))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(labelReferenceSnapshot)
                                    .add(labelActualSnapshot)
                                    .add(jLabel1))
                                .add(0, 0, Short.MAX_VALUE))))
                    .add(separator)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(buttonCancel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonAction)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(labelImage, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(labelTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(labelReferenceSnapshot)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(buttonNewReferenceSnapshot)
                            .add(selectReferenceSnapshot, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(labelActualSnapshot)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(buttonNewActualSnapshot)
                            .add(selectActualSnapshot, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(18, 18, 18)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editConflictSnapshot, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(labelCompareStatus)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(comparisonProgress, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(separator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buttonAction)
                    .add(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonNewReferenceSnapshotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewReferenceSnapshotActionPerformed
        CreateSnapshotDialog wizard = new CreateSnapshotDialog(null, true);
        wizard.setVisible(true);
        String snapshotName = wizard.getOptionValue(ExploreApplication.OPTION_SNAPSHOT_NAME).getStringValue();
        refreshComboboxes(DatabaseManagerFactory.get().getSnapshot(snapshotName), null);
    }//GEN-LAST:event_buttonNewReferenceSnapshotActionPerformed

    private void buttonActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionActionPerformed
        if (buttonAction.getText().equals(TEXT_FINISH)) {
            setVisible(false);
        } else if (buttonAction.getText().equals(TEXT_ABORT)) {
            // TODO: Implement abort
        } else {
            buttonAction.setText(TEXT_ABORT);
            buttonAction.setEnabled(false);
            buttonCancel.setEnabled(false);
            compareSnapshots();
        }
    }//GEN-LAST:event_buttonActionActionPerformed

    
    
    private void buttonNewActualSnapshotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewActualSnapshotActionPerformed
        CreateSnapshotDialog wizard = new CreateSnapshotDialog(null, true);
        wizard.setVisible(true);
        String snapshotName = wizard.getOptionValue(ExploreApplication.OPTION_SNAPSHOT_NAME).getStringValue();
		refreshComboboxes(null, snapshotName);
    }//GEN-LAST:event_buttonNewActualSnapshotActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAction;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonNewActualSnapshot;
    private javax.swing.JButton buttonNewReferenceSnapshot;
    private javax.swing.JProgressBar comparisonProgress;
    private javax.swing.JTextField editConflictSnapshot;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelActualSnapshot;
    private javax.swing.JLabel labelCompareStatus;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel labelReferenceSnapshot;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JComboBox selectActualSnapshot;
    private javax.swing.JComboBox selectReferenceSnapshot;
    private javax.swing.JSeparator separator;
    // End of variables declaration//GEN-END:variables

    public void complete(boolean success) {
        comparisonProgress.setMaximum(1);
        comparisonProgress.setValue(1);
        labelCompareStatus.setText(STATUS_PREFIX + "Complete");

        buttonAction.setText(TEXT_FINISH);
        buttonAction.setEnabled(true);
    }

    public void setMaximum(int max) {
        comparisonProgress.setMaximum(max);
    }

    public void setValue(int value) {
        comparisonProgress.setValue(value);
    }

    public void start() {
        comparisonProgress.setValue(0);
    }

    private void compareSnapshots() {
        new Thread(new Runnable() {
            public void run() {
                try {
            		ProcessConfiguration config = new ProcessConfiguration();
            		config.getOption(ExploreApplication.OPTION_SNAPSHOT_NAME).setValue(editConflictSnapshot.getText());

                    Snapshot snap = ExploreApplication.compare(
                    		config,
                            (Snapshot) selectReferenceSnapshot.getSelectedItem(),
                            (Snapshot) selectActualSnapshot.getSelectedItem(),
                            CompareSnapshotsDialog.this
                        );
                    mainWindow.refreshSnapshotList();
                    mainWindow.viewSnapshot(snap);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(mainWindow, "Error during compare: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }).start();
    }

}
