package org.opencompare.ui;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import org.opencompare.ExploreApplication;
import org.opencompare.WithProgress;
import org.opencompare.database.Database;

public class CreateSnapshotDialog extends javax.swing.JDialog implements WithProgress {

	private static final long serialVersionUID = 1L;

	private final MainWindow mainWindow;

    private static final String STATUS_PREFIX = "Parsing file structure: ";

    public CreateSnapshotDialog(MainWindow parent, boolean modal) {
        super(parent, modal);
        this.mainWindow = parent;
        
        initComponents();
        
        buttonAction.setText(TEXT_START);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        buttonAction = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        editSystemHome = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        editSnapshotName = new javax.swing.JTextField();
        labelParseFileStatus = new javax.swing.JLabel();
        progressParseFile = new javax.swing.JProgressBar();
        systemPanel = new javax.swing.JPanel();
        connectToSystemCheckBox = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        editSystemHost = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        editAdminUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        editAdminPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create snapshot");
        setLocationByPlatform(true);
        setModal(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Create shapshot");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/opencompare/ui/images/fingerprint.gif"))); // NOI18N

        buttonAction.setText("Action!");
        buttonAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jLabel3.setText("System home");

        buttonBrowse.setText("Browse...");
        buttonBrowse.setToolTipText("");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        jLabel4.setText("Snapshot name");

        labelParseFileStatus.setText("Progress");
        labelParseFileStatus.setToolTipText("");

        systemPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("System"));

        connectToSystemCheckBox.setText("Connect to System");
        connectToSystemCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectToSystemCheckBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("System URL");

        editSystemHost.setText("http://localhost/System/");
        editSystemHost.setEnabled(false);

        jLabel6.setText("Administrator username");

        editAdminUser.setText("user");
        editAdminUser.setEnabled(false);

        jLabel7.setText("Administrator password");

        editAdminPassword.setEnabled(false);

        org.jdesktop.layout.GroupLayout systemPanelLayout = new org.jdesktop.layout.GroupLayout(systemPanel);
        systemPanel.setLayout(systemPanelLayout);
        systemPanelLayout.setHorizontalGroup(
            systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(systemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(editSystemHost)
                    .add(systemPanelLayout.createSequentialGroup()
                        .add(systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(editAdminUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 178, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(connectToSystemCheckBox)
                            .add(jLabel5)
                            .add(jLabel6))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(systemPanelLayout.createSequentialGroup()
                                .add(jLabel7)
                                .add(0, 0, Short.MAX_VALUE))
                            .add(editAdminPassword))))
                .addContainerGap())
        );
        systemPanelLayout.setVerticalGroup(
            systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(systemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(connectToSystemCheckBox)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(editSystemHost, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(systemPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(editAdminUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(editAdminPassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, editSnapshotName)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, editSystemHome))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(buttonBrowse))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel4)
                                    .add(jLabel3))
                                .add(0, 0, Short.MAX_VALUE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(systemPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(0, 101, 101))
                            .add(progressParseFile, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(labelParseFileStatus)
                                .add(259, 259, 259))))
                    .add(jSeparator1)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(buttonCancel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(buttonAction)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(editSystemHome, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(buttonBrowse))
                        .add(18, 18, 18)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editSnapshotName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(systemPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(labelParseFileStatus)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(progressParseFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 33, Short.MAX_VALUE)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buttonAction)
                    .add(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionActionPerformed
        if (buttonAction.getText().equals(TEXT_FINISH)) {
            setVisible(false);
        } else if (buttonAction.getText().equals(TEXT_ABORT)) {
            // TODO: Implement abort
        } else {
            buttonAction.setText(TEXT_ABORT);
            buttonAction.setEnabled(false);
            buttonCancel.setEnabled(false);
            createSnapshot();
        }
    }//GEN-LAST:event_buttonActionActionPerformed

    public void complete(boolean success) {
        progressParseFile.setMaximum(1);
        progressParseFile.setValue(1);
        labelParseFileStatus.setText(STATUS_PREFIX + "Complete");

        buttonAction.setText(TEXT_FINISH);
        buttonAction.setEnabled(true);
    }

    public void setMaximum(int max) {
        progressParseFile.setMaximum(max);
    }

    public void setValue(int value) {
        progressParseFile.setValue(value);
    }

    public void start() {
        progressParseFile.setValue(0);
    }

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
        JFileChooser folderChooser = new JFileChooser();
        folderChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (folderChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            editSystemHome.setText(folderChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_buttonBrowseActionPerformed

    private void connectToSystemCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectToSystemCheckBoxActionPerformed
        boolean connect = connectToSystemCheckBox.isSelected();
        editSystemHost.setEnabled(connect);
        editAdminPassword.setEnabled(connect);
        editAdminUser.setEnabled(connect);
    }//GEN-LAST:event_connectToSystemCheckBoxActionPerformed

    public String getSnapshotName() {
        return editSnapshotName.getText();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAction;
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JCheckBox connectToSystemCheckBox;
    private javax.swing.JPasswordField editAdminPassword;
    private javax.swing.JTextField editAdminUser;
    private javax.swing.JTextField editSnapshotName;
    private javax.swing.JTextField editSystemHome;
    private javax.swing.JTextField editSystemHost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelParseFileStatus;
    private javax.swing.JProgressBar progressParseFile;
    private javax.swing.JPanel systemPanel;
    // End of variables declaration//GEN-END:variables

    private void createSnapshot() {
        final WithProgress thiz = this;
        
        new Thread(new Runnable() {
            public void run() {
                try {
                    Database database = ExploreApplication.explore(
                            editSystemHome.getText(),
                            editSnapshotName.getText(),
                            thiz
                        );
                    mainWindow.refreshSnapshotList();
                    mainWindow.viewSnapshot(database.getSnapshot());
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(mainWindow, "Error during exploration: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        }).start();
    }
}
